package np.com.shreekrishnaban.numberTextWatcher;

import android.content.Context;
import android.text.Editable;
import android.text.TextWatcher;
import android.widget.EditText;

import java.util.StringTokenizer;

/**
 * Created by Shreekrishna Ban on 12/14/2015.
 * This class is used For thousand seperator to the editText 
 * This seperats the editText input with comma while user is entering the value
 
 * ----------------Extra features-----------------------------
 * Prevents wrinting that starts with "0" and adds "0." when "." pressed
 
 ----------------Method Lists-----------------------------
 >> beforeTextChanged 	=> 	@Override
 >> onTextChanged 		=> 	@Override
 >> afterTextChanged 	=> 	@Override
 
 >> getDecimalFormat 	=> 	gets decimal format of input string with comma as needed
 >> trimCommaOfString 	=> 	Trims comma of strings, Used by calling activity or fragment
 
 */
public class NumberTextWatcherForThousand implements TextWatcher {

    EditText editText;
    int startPosition;

    boolean isIncreasing = true;
    long lastLength = 0;
    String initialString = null;

    public NumberTextWatcherForThousand(EditText editText) {
        this.editText = editText;


    }

    @Override
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
        startPosition = start;

        if (count == 0) {
            isIncreasing = true;
        } else {
            isIncreasing = false;
        }

        initialString = String.valueOf(s);
    }

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {


    }

    @Override
    public void afterTextChanged(Editable s) {


        try {


            editText.removeTextChangedListener(this);

            String value = editText.getText().toString();

            if (value.isEmpty()) {

                lastLength = 0;

            } else {

                if(value.startsWith(".")){
                    editText.setText("0.");
                }
                if(value.startsWith("0") && !value.startsWith("0.")){
                    editText.setText("");

                }




                String str = editText.getText().toString().trim().replaceAll(",", "");


                editText.setText(getDecimalFormattedString(str));


                String stringFromEditText = editText.getText().toString().trim();



                if (isIncreasing) {
                    int increaseValue = 1;
                    if (stringFromEditText.length() - lastLength  > 1) {
                        increaseValue++;
                    }
                    editText.setSelection(startPosition + increaseValue);
                } else {


                    char delChar = initialString.charAt(startPosition);
                    if (delChar == ',') {
                        StringBuilder stringBuilder = new StringBuilder(stringFromEditText);
                        stringBuilder.deleteCharAt(startPosition - 1);
                        editText.setText(getDecimalFormattedString(stringBuilder.toString().replace(",", "")));
                    }


                    int decreaseValue = 0;
                    if (lastLength - stringFromEditText.length()  > 1) {
                        decreaseValue++;
                    }


                    editText.setSelection(startPosition - decreaseValue);

                }



                lastLength = stringFromEditText.length();


            }

            editText.addTextChangedListener(this);

        } catch (Exception ex) {

            ex.printStackTrace();
            editText.addTextChangedListener(this);
        }


    }

    public static String getDecimalFormattedString(String value)
    {
        StringTokenizer lst = new StringTokenizer(value, ".");
        String str1 = value;
        String str2 = "";
        if (lst.countTokens() > 1)
        {
            str1 = lst.nextToken();
            str2 = lst.nextToken();
        }
        String str3 = "";
        int i = 0;
        int j = -1 + str1.length();
        if (str1.charAt( -1 + str1.length()) == '.')
        {
            j--;
            str3 = ".";
        }
        for (int k = j;; k--)
        {
            if (k < 0)
            {
                if (str2.length() > 0)
                    str3 = str3 + "." + str2;
                return str3;
            }
            if (i == 3)
            {
                str3 = "," + str3;
                i = 0;
            }
            str3 = str1.charAt(k) + str3;
            i++;
        }

    }


}
